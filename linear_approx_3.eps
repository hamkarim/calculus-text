%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, November 20, 2008 8:45:20 AM GMT-08:00
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% StandardSymLs defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/StandardSymL vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /NimbusSanL-Regu    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /StandardSymL       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /StandardSymL       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /NimbusSanL-Regu 16#00 vg&newcompositefont
/SansSerif-Bold /NimbusSanL-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /NimbusSanL-ReguItal 16#02 vg&newcompositefont
/SansSerif-BoldItalic /NimbusSanL-BoldItal 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /NimbusSanL-Regu 16#00 vg&newcompositefont
/Serif-Bold /NimbusSanL-Bold 16#01 vg&newcompositefont
/Serif-Italic /NimbusSanL-Regu-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /NimbusSanL-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /NimbusSanL-Regu 16#00 vg&newcompositefont
/Dialog-Bold /NimbusSanL-Bold 16#01 vg&newcompositefont
/Dialog-Italic /NimbusSanL-ReguItal 16#02 vg&newcompositefont
/Dialog-BoldItalic /NimbusSanL-BoldItal 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /NimbusSanL-Regu 16#00 vg&newcompositefont
/DialogInput-Bold /NimbusSanL-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /NimbusSanL-ReguItal 16#02 vg&newcompositefont
/DialogInput-BoldItalic /NimbusSanL-BoldItal 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/NimbusSanL-Regu 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
q
q
1.00000 0 0 RG
57.0000 2.00569 316.463 350.994 rc
newpath
58.0000 352.000 m
371.463 5.44967 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
0.196078 0.803922 0.196078 RG
57.0000 2.00569 316.463 350.994 rc
newpath
58.0000 350.556 m
371.463 4.00570 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
q
newpath
355.790 355.000 m
355.790 357.600 l
S
newpath
340.116 355.000 m
340.116 357.600 l
S
newpath
324.443 355.000 m
324.443 357.600 l
S
newpath
308.770 355.000 m
308.770 357.600 l
S
newpath
277.424 355.000 m
277.424 357.600 l
S
newpath
261.751 355.000 m
261.751 357.600 l
S
newpath
246.078 355.000 m
246.078 357.600 l
S
newpath
230.404 355.000 m
230.404 357.600 l
S
newpath
199.058 355.000 m
199.058 357.600 l
S
newpath
183.385 355.000 m
183.385 357.600 l
S
newpath
167.712 355.000 m
167.712 357.600 l
S
newpath
152.039 355.000 m
152.039 357.600 l
S
newpath
120.692 355.000 m
120.692 357.600 l
S
newpath
105.019 355.000 m
105.019 357.600 l
S
newpath
89.3463 355.000 m
89.3463 357.600 l
S
newpath
73.6731 355.000 m
73.6731 357.600 l
S
newpath
55.0000 355.000 m
371.463 355.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
210 375 8 15 rc
q
Q
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
58.0000 355.000 m
58.0000 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
49.9062 380.234 m
48.9375 380.234 48.1562 379.783 47.5625 378.882  c
46.9687 377.981 46.6718 376.796 46.6718 375.328  c
46.6718 373.817 46.9687 372.614 47.5625 371.718  c
48.1562 370.822 48.9531 370.375 49.9531 370.375  c
50.9531 370.375 51.7526 370.822 52.3515 371.718  c
52.9505 372.614 53.2500 373.812 53.2500 375.312  c
53.2500 376.822 52.9505 378.020 52.3515 378.906  c
51.7526 379.791 50.9375 380.234 49.9062 380.234  c
h
49.9218 379.843 m
51.2552 379.906 51.9218 378.369 51.9218 375.234  c
51.9218 372.244 51.2656 370.750 49.9531 370.750  c
48.6510 370.750 48.0000 372.265 48.0000 375.296  c
48.0000 378.265 48.6406 379.781 49.9218 379.843  c
h
54.8466 380.000 m
54.8466 378.437 l
56.4091 378.437 l
56.4091 380.000 l
54.8466 380.000 l
h
58.8403 380.015 m
58.8403 378.437 l
59.4653 378.437 l
59.4809 378.578 l
59.4965 379.062 l
59.5174 379.583 59.9236 379.843 60.7153 379.843  c
61.2986 379.843 61.7622 379.614 62.1059 379.156  c
62.4497 378.697 62.6215 378.078 62.6215 377.296  c
62.6215 376.401 62.3559 375.760 61.8247 375.375  c
61.2934 374.989 60.4236 374.796 59.2153 374.796  c
58.9965 374.796 l
58.9965 370.609 l
63.7309 370.609 l
63.7309 371.703 l
59.3872 371.703 l
59.3872 374.328 l
59.9653 374.328 l
62.6111 374.328 63.9340 375.333 63.9340 377.343  c
63.9340 378.250 63.6293 378.958 63.0200 379.468  c
62.4106 379.979 61.5695 380.234 60.4965 380.234  c
59.9653 380.234 59.4132 380.161 58.8403 380.015  c
h
71.0620 375.406 m
70.4682 376.229 69.7130 376.640 68.7963 376.640  c
67.9734 376.640 67.3042 376.364 66.7885 375.812  c
66.2729 375.260 66.0151 374.552 66.0151 373.687  c
66.0151 372.750 66.3068 371.960 66.8901 371.320  c
67.4734 370.679 68.2026 370.359 69.0776 370.359  c
70.1401 370.359 70.9578 370.776 71.5307 371.609  c
72.1036 372.442 72.3901 373.625 72.3901 375.156  c
72.3901 376.770 72.0594 378.020 71.3979 378.906  c
70.7364 379.791 69.8068 380.234 68.6088 380.234  c
67.8276 380.234 67.1349 380.093 66.5307 379.812  c
66.5307 378.312 l
67.1557 378.312 l
67.1713 378.453 l
67.2026 378.906 l
67.2234 379.187 67.3745 379.414 67.6557 379.585  c
67.9370 379.757 68.2911 379.843 68.7182 379.843  c
69.4578 379.843 70.0333 379.455 70.4448 378.679  c
70.8562 377.903 71.0620 376.812 71.0620 375.406  c
h
71.0151 374.062 m
71.0151 373.093 70.8198 372.302 70.4292 371.687  c
70.0385 371.072 69.5359 370.765 68.9213 370.765  c
67.8172 370.765 67.2651 371.682 67.2651 373.515  c
67.2651 375.296 67.8380 376.187 68.9838 376.187  c
69.6088 376.187 70.1036 375.994 70.4682 375.609  c
70.8328 375.224 71.0151 374.708 71.0151 374.062  c
h
77.0805 380.234 m
76.1118 380.234 75.3305 379.783 74.7368 378.882  c
74.1430 377.981 73.8461 376.796 73.8461 375.328  c
73.8461 373.817 74.1430 372.614 74.7368 371.718  c
75.3305 370.822 76.1274 370.375 77.1274 370.375  c
78.1274 370.375 78.9269 370.822 79.5258 371.718  c
80.1248 372.614 80.4243 373.812 80.4243 375.312  c
80.4243 376.822 80.1248 378.020 79.5258 378.906  c
78.9269 379.791 78.1118 380.234 77.0805 380.234  c
h
77.0961 379.843 m
78.4295 379.906 79.0961 378.369 79.0961 375.234  c
79.0961 372.244 78.4399 370.750 77.1274 370.750  c
75.8253 370.750 75.1743 372.265 75.1743 375.296  c
75.1743 378.265 75.8149 379.781 77.0961 379.843  c
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
136.365 355.000 m
136.365 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
127.906 380.234 m
126.937 380.234 126.156 379.783 125.562 378.882  c
124.968 377.981 124.671 376.796 124.671 375.328  c
124.671 373.817 124.968 372.614 125.562 371.718  c
126.156 370.822 126.953 370.375 127.953 370.375  c
128.953 370.375 129.752 370.822 130.351 371.718  c
130.950 372.614 131.250 373.812 131.250 375.312  c
131.250 376.822 130.950 378.020 130.351 378.906  c
129.752 379.791 128.937 380.234 127.906 380.234  c
h
127.921 379.843 m
129.255 379.906 129.921 378.369 129.921 375.234  c
129.921 372.244 129.265 370.750 127.953 370.750  c
126.651 370.750 126.000 372.265 126.000 375.296  c
126.000 378.265 126.640 379.781 127.921 379.843  c
h
132.846 380.000 m
132.846 378.437 l
134.409 378.437 l
134.409 380.000 l
132.846 380.000 l
h
136.840 380.015 m
136.840 378.437 l
137.465 378.437 l
137.481 378.578 l
137.496 379.062 l
137.517 379.583 137.923 379.843 138.715 379.843  c
139.298 379.843 139.762 379.614 140.106 379.156  c
140.449 378.697 140.621 378.078 140.621 377.296  c
140.621 376.401 140.356 375.760 139.824 375.375  c
139.293 374.989 138.423 374.796 137.215 374.796  c
136.996 374.796 l
136.996 370.609 l
141.731 370.609 l
141.731 371.703 l
137.387 371.703 l
137.387 374.328 l
137.965 374.328 l
140.611 374.328 141.934 375.333 141.934 377.343  c
141.934 378.250 141.629 378.958 141.020 379.468  c
140.410 379.979 139.569 380.234 138.496 380.234  c
137.965 380.234 137.413 380.161 136.840 380.015  c
h
149.062 375.406 m
148.468 376.229 147.713 376.640 146.796 376.640  c
145.973 376.640 145.304 376.364 144.788 375.812  c
144.272 375.260 144.015 374.552 144.015 373.687  c
144.015 372.750 144.306 371.960 144.890 371.320  c
145.473 370.679 146.202 370.359 147.077 370.359  c
148.140 370.359 148.957 370.776 149.530 371.609  c
150.103 372.442 150.390 373.625 150.390 375.156  c
150.390 376.770 150.059 378.020 149.397 378.906  c
148.736 379.791 147.806 380.234 146.608 380.234  c
145.827 380.234 145.134 380.093 144.530 379.812  c
144.530 378.312 l
145.155 378.312 l
145.171 378.453 l
145.202 378.906 l
145.223 379.187 145.374 379.414 145.655 379.585  c
145.937 379.757 146.291 379.843 146.718 379.843  c
147.457 379.843 148.033 379.455 148.444 378.679  c
148.856 377.903 149.062 376.812 149.062 375.406  c
h
149.015 374.062 m
149.015 373.093 148.819 372.302 148.429 371.687  c
148.038 371.072 147.536 370.765 146.921 370.765  c
145.817 370.765 145.265 371.682 145.265 373.515  c
145.265 375.296 145.838 376.187 146.983 376.187  c
147.608 376.187 148.103 375.994 148.468 375.609  c
148.832 375.224 149.015 374.708 149.015 374.062  c
h
152.658 380.015 m
152.658 378.437 l
153.283 378.437 l
153.299 378.578 l
153.314 379.062 l
153.335 379.583 153.742 379.843 154.533 379.843  c
155.117 379.843 155.580 379.614 155.924 379.156  c
156.268 378.697 156.439 378.078 156.439 377.296  c
156.439 376.401 156.174 375.760 155.643 375.375  c
155.111 374.989 154.242 374.796 153.033 374.796  c
152.814 374.796 l
152.814 370.609 l
157.549 370.609 l
157.549 371.703 l
153.205 371.703 l
153.205 374.328 l
153.783 374.328 l
156.429 374.328 157.752 375.333 157.752 377.343  c
157.752 378.250 157.447 378.958 156.838 379.468  c
156.229 379.979 155.387 380.234 154.314 380.234  c
153.783 380.234 153.231 380.161 152.658 380.015  c
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
214.731 355.000 m
214.731 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
205.906 380.234 m
204.937 380.234 204.156 379.783 203.562 378.882  c
202.968 377.981 202.671 376.796 202.671 375.328  c
202.671 373.817 202.968 372.614 203.562 371.718  c
204.156 370.822 204.953 370.375 205.953 370.375  c
206.953 370.375 207.752 370.822 208.351 371.718  c
208.950 372.614 209.250 373.812 209.250 375.312  c
209.250 376.822 208.950 378.020 208.351 378.906  c
207.752 379.791 206.937 380.234 205.906 380.234  c
h
205.921 379.843 m
207.255 379.906 207.921 378.369 207.921 375.234  c
207.921 372.244 207.265 370.750 205.953 370.750  c
204.651 370.750 204.000 372.265 204.000 375.296  c
204.000 378.265 204.640 379.781 205.921 379.843  c
h
210.846 380.000 m
210.846 378.437 l
212.409 378.437 l
212.409 380.000 l
210.846 380.000 l
h
215.465 375.187 m
216.059 374.375 216.814 373.968 217.731 373.968  c
218.553 373.968 219.225 374.242 219.746 374.789  c
220.267 375.335 220.527 376.046 220.527 376.921  c
220.527 377.859 220.231 378.645 219.637 379.281  c
219.043 379.916 218.314 380.234 217.449 380.234  c
216.387 380.234 215.569 379.820 214.996 378.992  c
214.423 378.164 214.137 376.984 214.137 375.453  c
214.137 373.838 214.467 372.585 215.129 371.695  c
215.790 370.804 216.725 370.359 217.934 370.359  c
218.715 370.359 219.402 370.500 219.996 370.781  c
219.996 372.281 l
219.371 372.281 l
219.356 372.156 l
219.324 371.703 l
219.303 371.421 219.152 371.192 218.871 371.015  c
218.590 370.838 218.236 370.750 217.809 370.750  c
217.069 370.750 216.494 371.138 216.082 371.914  c
215.671 372.690 215.465 373.781 215.465 375.187  c
h
215.512 376.531 m
215.512 377.500 215.707 378.291 216.098 378.906  c
216.488 379.520 216.991 379.828 217.606 379.828  c
218.710 379.828 219.262 378.916 219.262 377.093  c
219.262 375.302 218.689 374.406 217.543 374.406  c
216.918 374.406 216.423 374.599 216.059 374.984  c
215.694 375.369 215.512 375.885 215.512 376.531  c
h
225.171 380.234 m
224.202 380.234 223.421 379.783 222.827 378.882  c
222.233 377.981 221.937 376.796 221.937 375.328  c
221.937 373.817 222.233 372.614 222.827 371.718  c
223.421 370.822 224.218 370.375 225.218 370.375  c
226.218 370.375 227.017 370.822 227.616 371.718  c
228.215 372.614 228.515 373.812 228.515 375.312  c
228.515 376.822 228.215 378.020 227.616 378.906  c
227.017 379.791 226.202 380.234 225.171 380.234  c
h
225.187 379.843 m
226.520 379.906 227.187 378.369 227.187 375.234  c
227.187 372.244 226.530 370.750 225.218 370.750  c
223.916 370.750 223.265 372.265 223.265 375.296  c
223.265 378.265 223.905 379.781 225.187 379.843  c
h
233.080 380.234 m
232.111 380.234 231.330 379.783 230.736 378.882  c
230.143 377.981 229.846 376.796 229.846 375.328  c
229.846 373.817 230.143 372.614 230.736 371.718  c
231.330 370.822 232.127 370.375 233.127 370.375  c
234.127 370.375 234.926 370.822 235.525 371.718  c
236.124 372.614 236.424 373.812 236.424 375.312  c
236.424 376.822 236.124 378.020 235.525 378.906  c
234.926 379.791 234.111 380.234 233.080 380.234  c
h
233.096 379.843 m
234.429 379.906 235.096 378.369 235.096 375.234  c
235.096 372.244 234.439 370.750 233.127 370.750  c
231.825 370.750 231.174 372.265 231.174 375.296  c
231.174 378.265 231.814 379.781 233.096 379.843  c
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
293.097 355.000 m
293.097 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
284.906 380.234 m
283.937 380.234 283.156 379.783 282.562 378.882  c
281.968 377.981 281.671 376.796 281.671 375.328  c
281.671 373.817 281.968 372.614 282.562 371.718  c
283.156 370.822 283.953 370.375 284.953 370.375  c
285.953 370.375 286.752 370.822 287.351 371.718  c
287.950 372.614 288.250 373.812 288.250 375.312  c
288.250 376.822 287.950 378.020 287.351 378.906  c
286.752 379.791 285.937 380.234 284.906 380.234  c
h
284.921 379.843 m
286.255 379.906 286.921 378.369 286.921 375.234  c
286.921 372.244 286.265 370.750 284.953 370.750  c
283.651 370.750 283.000 372.265 283.000 375.296  c
283.000 378.265 283.640 379.781 284.921 379.843  c
h
289.846 380.000 m
289.846 378.437 l
291.409 378.437 l
291.409 380.000 l
289.846 380.000 l
h
294.465 375.187 m
295.059 374.375 295.814 373.968 296.731 373.968  c
297.553 373.968 298.225 374.242 298.746 374.789  c
299.267 375.335 299.527 376.046 299.527 376.921  c
299.527 377.859 299.231 378.645 298.637 379.281  c
298.043 379.916 297.314 380.234 296.449 380.234  c
295.387 380.234 294.569 379.820 293.996 378.992  c
293.423 378.164 293.137 376.984 293.137 375.453  c
293.137 373.838 293.467 372.585 294.129 371.695  c
294.790 370.804 295.725 370.359 296.934 370.359  c
297.715 370.359 298.402 370.500 298.996 370.781  c
298.996 372.281 l
298.371 372.281 l
298.356 372.156 l
298.324 371.703 l
298.303 371.421 298.152 371.192 297.871 371.015  c
297.590 370.838 297.236 370.750 296.809 370.750  c
296.069 370.750 295.494 371.138 295.082 371.914  c
294.671 372.690 294.465 373.781 294.465 375.187  c
h
294.512 376.531 m
294.512 377.500 294.707 378.291 295.098 378.906  c
295.488 379.520 295.991 379.828 296.606 379.828  c
297.710 379.828 298.262 378.916 298.262 377.093  c
298.262 375.302 297.689 374.406 296.543 374.406  c
295.918 374.406 295.423 374.599 295.059 374.984  c
294.694 375.369 294.512 375.885 294.512 376.531  c
h
304.171 380.234 m
303.202 380.234 302.421 379.783 301.827 378.882  c
301.233 377.981 300.937 376.796 300.937 375.328  c
300.937 373.817 301.233 372.614 301.827 371.718  c
302.421 370.822 303.218 370.375 304.218 370.375  c
305.218 370.375 306.017 370.822 306.616 371.718  c
307.215 372.614 307.515 373.812 307.515 375.312  c
307.515 376.822 307.215 378.020 306.616 378.906  c
306.017 379.791 305.202 380.234 304.171 380.234  c
h
304.187 379.843 m
305.520 379.906 306.187 378.369 306.187 375.234  c
306.187 372.244 305.530 370.750 304.218 370.750  c
302.916 370.750 302.265 372.265 302.265 375.296  c
302.265 378.265 302.905 379.781 304.187 379.843  c
h
309.658 380.015 m
309.658 378.437 l
310.283 378.437 l
310.299 378.578 l
310.314 379.062 l
310.335 379.583 310.742 379.843 311.533 379.843  c
312.117 379.843 312.580 379.614 312.924 379.156  c
313.268 378.697 313.439 378.078 313.439 377.296  c
313.439 376.401 313.174 375.760 312.643 375.375  c
312.111 374.989 311.242 374.796 310.033 374.796  c
309.814 374.796 l
309.814 370.609 l
314.549 370.609 l
314.549 371.703 l
310.205 371.703 l
310.205 374.328 l
310.783 374.328 l
313.429 374.328 314.752 375.333 314.752 377.343  c
314.752 378.250 314.447 378.958 313.838 379.468  c
313.229 379.979 312.387 380.234 311.314 380.234  c
310.783 380.234 310.231 380.161 309.658 380.015  c
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
371.463 355.000 m
371.463 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
362.906 380.234 m
361.937 380.234 361.156 379.783 360.562 378.882  c
359.968 377.981 359.671 376.796 359.671 375.328  c
359.671 373.817 359.968 372.614 360.562 371.718  c
361.156 370.822 361.953 370.375 362.953 370.375  c
363.953 370.375 364.752 370.822 365.351 371.718  c
365.950 372.614 366.250 373.812 366.250 375.312  c
366.250 376.822 365.950 378.020 365.351 378.906  c
364.752 379.791 363.937 380.234 362.906 380.234  c
h
362.921 379.843 m
364.255 379.906 364.921 378.369 364.921 375.234  c
364.921 372.244 364.265 370.750 362.953 370.750  c
361.651 370.750 361.000 372.265 361.000 375.296  c
361.000 378.265 361.640 379.781 362.921 379.843  c
h
367.846 380.000 m
367.846 378.437 l
369.409 378.437 l
369.409 380.000 l
367.846 380.000 l
h
372.465 375.187 m
373.059 374.375 373.814 373.968 374.731 373.968  c
375.553 373.968 376.225 374.242 376.746 374.789  c
377.267 375.335 377.527 376.046 377.527 376.921  c
377.527 377.859 377.231 378.645 376.637 379.281  c
376.043 379.916 375.314 380.234 374.449 380.234  c
373.387 380.234 372.569 379.820 371.996 378.992  c
371.423 378.164 371.137 376.984 371.137 375.453  c
371.137 373.838 371.467 372.585 372.129 371.695  c
372.790 370.804 373.725 370.359 374.934 370.359  c
375.715 370.359 376.402 370.500 376.996 370.781  c
376.996 372.281 l
376.371 372.281 l
376.356 372.156 l
376.324 371.703 l
376.303 371.421 376.152 371.192 375.871 371.015  c
375.590 370.838 375.236 370.750 374.809 370.750  c
374.069 370.750 373.494 371.138 373.082 371.914  c
372.671 372.690 372.465 373.781 372.465 375.187  c
h
372.512 376.531 m
372.512 377.500 372.707 378.291 373.098 378.906  c
373.488 379.520 373.991 379.828 374.606 379.828  c
375.710 379.828 376.262 378.916 376.262 377.093  c
376.262 375.302 375.689 374.406 374.543 374.406  c
373.918 374.406 373.423 374.599 373.059 374.984  c
372.694 375.369 372.512 375.885 372.512 376.531  c
h
382.843 370.515 m
382.843 378.359 l
382.890 378.984 l
382.900 379.234 382.970 379.398 383.101 379.476  c
383.231 379.554 383.499 379.593 383.905 379.593  c
384.655 379.609 l
384.655 380.000 l
379.796 380.000 l
379.796 379.609 l
380.530 379.593 l
380.937 379.593 381.205 379.554 381.335 379.476  c
381.465 379.398 381.541 379.234 381.562 378.984  c
381.593 378.359 l
381.593 372.531 l
381.562 371.890 l
381.562 371.588 381.473 371.437 381.296 371.437  c
381.171 371.437 380.879 371.479 380.421 371.562  c
379.796 371.671 l
379.796 371.281 l
382.843 370.515 l
h
390.080 380.234 m
389.111 380.234 388.330 379.783 387.736 378.882  c
387.143 377.981 386.846 376.796 386.846 375.328  c
386.846 373.817 387.143 372.614 387.736 371.718  c
388.330 370.822 389.127 370.375 390.127 370.375  c
391.127 370.375 391.926 370.822 392.525 371.718  c
393.124 372.614 393.424 373.812 393.424 375.312  c
393.424 376.822 393.124 378.020 392.525 378.906  c
391.926 379.791 391.111 380.234 390.080 380.234  c
h
390.096 379.843 m
391.429 379.906 392.096 378.369 392.096 375.234  c
392.096 372.244 391.439 370.750 390.127 370.750  c
388.825 370.750 388.174 372.265 388.174 375.296  c
388.174 378.265 388.814 379.781 390.096 379.843  c
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
55.0000 5.44967 m
52.4000 5.44967 l
S
newpath
55.0000 19.8892 m
52.4000 19.8892 l
S
newpath
55.0000 48.7684 m
52.4000 48.7684 l
S
newpath
55.0000 63.2080 m
52.4000 63.2080 l
S
newpath
55.0000 77.6476 m
52.4000 77.6476 l
S
newpath
55.0000 92.0872 m
52.4000 92.0872 l
S
newpath
55.0000 135.406 m
52.4000 135.406 l
S
newpath
55.0000 120.966 m
52.4000 120.966 l
S
newpath
55.0000 149.845 m
52.4000 149.845 l
S
newpath
55.0000 164.285 m
52.4000 164.285 l
S
newpath
55.0000 193.164 m
52.4000 193.164 l
S
newpath
55.0000 207.604 m
52.4000 207.604 l
S
newpath
55.0000 222.043 m
52.4000 222.043 l
S
newpath
55.0000 236.483 m
52.4000 236.483 l
S
newpath
55.0000 265.362 m
52.4000 265.362 l
S
newpath
55.0000 279.802 m
52.4000 279.802 l
S
newpath
55.0000 294.241 m
52.4000 294.241 l
S
newpath
55.0000 308.681 m
52.4000 308.681 l
S
newpath
55.0000 337.560 m
52.4000 337.560 l
S
newpath
55.0000 352.000 m
52.4000 352.000 l
S
newpath
55.0000 355.000 m
55.0000 4.00570 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 171 8 15 rc
q
Q
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
55.0000 323.120 m
49.8000 323.120 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
19.9062 334.234 m
18.9375 334.234 18.1562 333.783 17.5625 332.882  c
16.9687 331.981 16.6718 330.796 16.6718 329.328  c
16.6718 327.817 16.9687 326.614 17.5625 325.718  c
18.1562 324.822 18.9531 324.375 19.9531 324.375  c
20.9531 324.375 21.7526 324.822 22.3515 325.718  c
22.9505 326.614 23.2500 327.812 23.2500 329.312  c
23.2500 330.822 22.9505 332.020 22.3515 332.906  c
21.7526 333.791 20.9375 334.234 19.9062 334.234  c
h
19.9218 333.843 m
21.2552 333.906 21.9218 332.369 21.9218 329.234  c
21.9218 326.244 21.2656 324.750 19.9531 324.750  c
18.6510 324.750 18.0000 326.265 18.0000 329.296  c
18.0000 332.265 18.6406 333.781 19.9218 333.843  c
h
24.8466 334.000 m
24.8466 332.437 l
26.4091 332.437 l
26.4091 334.000 l
24.8466 334.000 l
h
28.5278 333.937 m
28.5278 332.281 l
29.1528 332.281 l
29.1684 332.421 l
29.1840 332.859 l
29.1840 333.130 29.3429 333.362 29.6606 333.554  c
29.9783 333.747 30.3715 333.843 30.8403 333.843  c
31.3924 333.843 31.8377 333.625 32.1762 333.187  c
32.5148 332.750 32.6840 332.171 32.6840 331.453  c
32.6840 330.744 32.4627 330.190 32.0200 329.789  c
31.5773 329.388 30.9601 329.187 30.1684 329.187  c
29.3872 329.187 l
29.3872 328.796 l
29.8090 328.796 l
31.5799 328.796 32.4653 328.083 32.4653 326.656  c
32.4653 325.385 31.9080 324.750 30.7934 324.750  c
30.3038 324.750 29.8767 324.854 29.5122 325.062  c
29.3767 325.145 29.2830 325.484 29.2309 326.078  c
29.2309 326.171 l
28.6059 326.171 l
28.6059 324.734 l
29.2830 324.484 30.0486 324.359 30.9028 324.359  c
31.7674 324.359 32.4523 324.554 32.9575 324.945  c
33.4627 325.335 33.7153 325.864 33.7153 326.531  c
33.7153 327.645 33.0590 328.442 31.7465 328.921  c
32.5486 329.130 33.1241 329.427 33.4731 329.812  c
33.8221 330.197 33.9965 330.734 33.9965 331.421  c
33.9965 332.286 33.7153 332.971 33.1528 333.476  c
32.5903 333.981 31.8247 334.234 30.8559 334.234  c
29.9705 334.234 29.1945 334.135 28.5278 333.937  c
h
36.7495 334.015 m
36.7495 332.437 l
37.3745 332.437 l
37.3901 332.578 l
37.4057 333.062 l
37.4266 333.583 37.8328 333.843 38.6245 333.843  c
39.2078 333.843 39.6713 333.614 40.0151 333.156  c
40.3588 332.697 40.5307 332.078 40.5307 331.296  c
40.5307 330.401 40.2651 329.760 39.7338 329.375  c
39.2026 328.989 38.3328 328.796 37.1245 328.796  c
36.9057 328.796 l
36.9057 324.609 l
41.6401 324.609 l
41.6401 325.703 l
37.2963 325.703 l
37.2963 328.328 l
37.8745 328.328 l
40.5203 328.328 41.8432 329.333 41.8432 331.343  c
41.8432 332.250 41.5385 332.958 40.9292 333.468  c
40.3198 333.979 39.4786 334.234 38.4057 334.234  c
37.8745 334.234 37.3224 334.161 36.7495 334.015  c
h
47.0805 334.234 m
46.1118 334.234 45.3305 333.783 44.7368 332.882  c
44.1430 331.981 43.8461 330.796 43.8461 329.328  c
43.8461 327.817 44.1430 326.614 44.7368 325.718  c
45.3305 324.822 46.1274 324.375 47.1274 324.375  c
48.1274 324.375 48.9269 324.822 49.5258 325.718  c
50.1248 326.614 50.4243 327.812 50.4243 329.312  c
50.4243 330.822 50.1248 332.020 49.5258 332.906  c
48.9269 333.791 48.1118 334.234 47.0805 334.234  c
h
47.0961 333.843 m
48.4295 333.906 49.0961 332.369 49.0961 329.234  c
49.0961 326.244 48.4399 324.750 47.1274 324.750  c
45.8253 324.750 45.1743 326.265 45.1743 329.296  c
45.1743 332.265 45.8149 333.781 47.0961 333.843  c
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
55.0000 250.922 m
49.8000 250.922 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
19.9062 261.234 m
18.9375 261.234 18.1562 260.783 17.5625 259.882  c
16.9687 258.981 16.6718 257.796 16.6718 256.328  c
16.6718 254.817 16.9687 253.614 17.5625 252.718  c
18.1562 251.822 18.9531 251.375 19.9531 251.375  c
20.9531 251.375 21.7526 251.822 22.3515 252.718  c
22.9505 253.614 23.2500 254.812 23.2500 256.312  c
23.2500 257.822 22.9505 259.020 22.3515 259.906  c
21.7526 260.791 20.9375 261.234 19.9062 261.234  c
h
19.9218 260.843 m
21.2552 260.906 21.9218 259.369 21.9218 256.234  c
21.9218 253.244 21.2656 251.750 19.9531 251.750  c
18.6510 251.750 18.0000 253.265 18.0000 256.296  c
18.0000 259.265 18.6406 260.781 19.9218 260.843  c
h
24.8466 261.000 m
24.8466 259.437 l
26.4091 259.437 l
26.4091 261.000 l
24.8466 261.000 l
h
28.5278 260.937 m
28.5278 259.281 l
29.1528 259.281 l
29.1684 259.421 l
29.1840 259.859 l
29.1840 260.130 29.3429 260.362 29.6606 260.554  c
29.9783 260.747 30.3715 260.843 30.8403 260.843  c
31.3924 260.843 31.8377 260.625 32.1762 260.187  c
32.5148 259.750 32.6840 259.171 32.6840 258.453  c
32.6840 257.744 32.4627 257.190 32.0200 256.789  c
31.5773 256.388 30.9601 256.187 30.1684 256.187  c
29.3872 256.187 l
29.3872 255.796 l
29.8090 255.796 l
31.5799 255.796 32.4653 255.083 32.4653 253.656  c
32.4653 252.385 31.9080 251.750 30.7934 251.750  c
30.3038 251.750 29.8767 251.854 29.5122 252.062  c
29.3767 252.145 29.2830 252.484 29.2309 253.078  c
29.2309 253.171 l
28.6059 253.171 l
28.6059 251.734 l
29.2830 251.484 30.0486 251.359 30.9028 251.359  c
31.7674 251.359 32.4523 251.554 32.9575 251.945  c
33.4627 252.335 33.7153 252.864 33.7153 253.531  c
33.7153 254.645 33.0590 255.442 31.7465 255.921  c
32.5486 256.130 33.1241 256.427 33.4731 256.812  c
33.8221 257.197 33.9965 257.734 33.9965 258.421  c
33.9965 259.286 33.7153 259.971 33.1528 260.476  c
32.5903 260.981 31.8247 261.234 30.8559 261.234  c
29.9705 261.234 29.1945 261.135 28.5278 260.937  c
h
36.7495 261.015 m
36.7495 259.437 l
37.3745 259.437 l
37.3901 259.578 l
37.4057 260.062 l
37.4266 260.583 37.8328 260.843 38.6245 260.843  c
39.2078 260.843 39.6713 260.614 40.0151 260.156  c
40.3588 259.697 40.5307 259.078 40.5307 258.296  c
40.5307 257.401 40.2651 256.760 39.7338 256.375  c
39.2026 255.989 38.3328 255.796 37.1245 255.796  c
36.9057 255.796 l
36.9057 251.609 l
41.6401 251.609 l
41.6401 252.703 l
37.2963 252.703 l
37.2963 255.328 l
37.8745 255.328 l
40.5203 255.328 41.8432 256.333 41.8432 258.343  c
41.8432 259.250 41.5385 259.958 40.9292 260.468  c
40.3198 260.979 39.4786 261.234 38.4057 261.234  c
37.8745 261.234 37.3224 261.161 36.7495 261.015  c
h
44.6586 261.015 m
44.6586 259.437 l
45.2836 259.437 l
45.2993 259.578 l
45.3149 260.062 l
45.3357 260.583 45.7420 260.843 46.5336 260.843  c
47.1170 260.843 47.5805 260.614 47.9243 260.156  c
48.2680 259.697 48.4399 259.078 48.4399 258.296  c
48.4399 257.401 48.1743 256.760 47.6430 256.375  c
47.1118 255.989 46.2420 255.796 45.0336 255.796  c
44.8149 255.796 l
44.8149 251.609 l
49.5493 251.609 l
49.5493 252.703 l
45.2055 252.703 l
45.2055 255.328 l
45.7836 255.328 l
48.4295 255.328 49.7524 256.333 49.7524 258.343  c
49.7524 259.250 49.4477 259.958 48.8383 260.468  c
48.2290 260.979 47.3878 261.234 46.3149 261.234  c
45.7836 261.234 45.2316 261.161 44.6586 261.015  c
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
55.0000 178.724 m
49.8000 178.724 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
19.9062 189.234 m
18.9375 189.234 18.1562 188.783 17.5625 187.882  c
16.9687 186.981 16.6718 185.796 16.6718 184.328  c
16.6718 182.817 16.9687 181.614 17.5625 180.718  c
18.1562 179.822 18.9531 179.375 19.9531 179.375  c
20.9531 179.375 21.7526 179.822 22.3515 180.718  c
22.9505 181.614 23.2500 182.812 23.2500 184.312  c
23.2500 185.822 22.9505 187.020 22.3515 187.906  c
21.7526 188.791 20.9375 189.234 19.9062 189.234  c
h
19.9218 188.843 m
21.2552 188.906 21.9218 187.369 21.9218 184.234  c
21.9218 181.244 21.2656 179.750 19.9531 179.750  c
18.6510 179.750 18.0000 181.265 18.0000 184.296  c
18.0000 187.265 18.6406 188.781 19.9218 188.843  c
h
24.8466 189.000 m
24.8466 187.437 l
26.4091 187.437 l
26.4091 189.000 l
24.8466 189.000 l
h
28.5278 188.937 m
28.5278 187.281 l
29.1528 187.281 l
29.1684 187.421 l
29.1840 187.859 l
29.1840 188.130 29.3429 188.362 29.6606 188.554  c
29.9783 188.747 30.3715 188.843 30.8403 188.843  c
31.3924 188.843 31.8377 188.625 32.1762 188.187  c
32.5148 187.750 32.6840 187.171 32.6840 186.453  c
32.6840 185.744 32.4627 185.190 32.0200 184.789  c
31.5773 184.388 30.9601 184.187 30.1684 184.187  c
29.3872 184.187 l
29.3872 183.796 l
29.8090 183.796 l
31.5799 183.796 32.4653 183.083 32.4653 181.656  c
32.4653 180.385 31.9080 179.750 30.7934 179.750  c
30.3038 179.750 29.8767 179.854 29.5122 180.062  c
29.3767 180.145 29.2830 180.484 29.2309 181.078  c
29.2309 181.171 l
28.6059 181.171 l
28.6059 179.734 l
29.2830 179.484 30.0486 179.359 30.9028 179.359  c
31.7674 179.359 32.4523 179.554 32.9575 179.945  c
33.4627 180.335 33.7153 180.864 33.7153 181.531  c
33.7153 182.645 33.0590 183.442 31.7465 183.921  c
32.5486 184.130 33.1241 184.427 33.4731 184.812  c
33.8221 185.197 33.9965 185.734 33.9965 186.421  c
33.9965 187.286 33.7153 187.971 33.1528 188.476  c
32.5903 188.981 31.8247 189.234 30.8559 189.234  c
29.9705 189.234 29.1945 189.135 28.5278 188.937  c
h
37.3745 184.187 m
37.9682 183.375 38.7234 182.968 39.6401 182.968  c
40.4630 182.968 41.1349 183.242 41.6557 183.789  c
42.1766 184.335 42.4370 185.046 42.4370 185.921  c
42.4370 186.859 42.1401 187.645 41.5463 188.281  c
40.9526 188.916 40.2234 189.234 39.3588 189.234  c
38.2963 189.234 37.4786 188.820 36.9057 187.992  c
36.3328 187.164 36.0463 185.984 36.0463 184.453  c
36.0463 182.838 36.3771 181.585 37.0385 180.695  c
37.7000 179.804 38.6349 179.359 39.8432 179.359  c
40.6245 179.359 41.3120 179.500 41.9057 179.781  c
41.9057 181.281 l
41.2807 181.281 l
41.2651 181.156 l
41.2338 180.703 l
41.2130 180.421 41.0620 180.192 40.7807 180.015  c
40.4995 179.838 40.1453 179.750 39.7182 179.750  c
38.9786 179.750 38.4031 180.138 37.9917 180.914  c
37.5802 181.690 37.3745 182.781 37.3745 184.187  c
h
37.4213 185.531 m
37.4213 186.500 37.6167 187.291 38.0073 187.906  c
38.3979 188.520 38.9005 188.828 39.5151 188.828  c
40.6193 188.828 41.1713 187.916 41.1713 186.093  c
41.1713 184.302 40.5984 183.406 39.4526 183.406  c
38.8276 183.406 38.3328 183.599 37.9682 183.984  c
37.6036 184.369 37.4213 184.885 37.4213 185.531  c
h
47.0805 189.234 m
46.1118 189.234 45.3305 188.783 44.7368 187.882  c
44.1430 186.981 43.8461 185.796 43.8461 184.328  c
43.8461 182.817 44.1430 181.614 44.7368 180.718  c
45.3305 179.822 46.1274 179.375 47.1274 179.375  c
48.1274 179.375 48.9269 179.822 49.5258 180.718  c
50.1248 181.614 50.4243 182.812 50.4243 184.312  c
50.4243 185.822 50.1248 187.020 49.5258 187.906  c
48.9269 188.791 48.1118 189.234 47.0805 189.234  c
h
47.0961 188.843 m
48.4295 188.906 49.0961 187.369 49.0961 184.234  c
49.0961 181.244 48.4399 179.750 47.1274 179.750  c
45.8253 179.750 45.1743 181.265 45.1743 184.296  c
45.1743 187.265 45.8149 188.781 47.0961 188.843  c
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
55.0000 106.526 m
49.8000 106.526 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
19.9062 117.234 m
18.9375 117.234 18.1562 116.783 17.5625 115.882  c
16.9687 114.981 16.6718 113.796 16.6718 112.328  c
16.6718 110.817 16.9687 109.614 17.5625 108.718  c
18.1562 107.822 18.9531 107.375 19.9531 107.375  c
20.9531 107.375 21.7526 107.822 22.3515 108.718  c
22.9505 109.614 23.2500 110.812 23.2500 112.312  c
23.2500 113.822 22.9505 115.020 22.3515 115.906  c
21.7526 116.791 20.9375 117.234 19.9062 117.234  c
h
19.9218 116.843 m
21.2552 116.906 21.9218 115.369 21.9218 112.234  c
21.9218 109.244 21.2656 107.750 19.9531 107.750  c
18.6510 107.750 18.0000 109.265 18.0000 112.296  c
18.0000 115.265 18.6406 116.781 19.9218 116.843  c
h
24.8466 117.000 m
24.8466 115.437 l
26.4091 115.437 l
26.4091 117.000 l
24.8466 117.000 l
h
28.5278 116.937 m
28.5278 115.281 l
29.1528 115.281 l
29.1684 115.421 l
29.1840 115.859 l
29.1840 116.130 29.3429 116.362 29.6606 116.554  c
29.9783 116.747 30.3715 116.843 30.8403 116.843  c
31.3924 116.843 31.8377 116.625 32.1762 116.187  c
32.5148 115.750 32.6840 115.171 32.6840 114.453  c
32.6840 113.744 32.4627 113.190 32.0200 112.789  c
31.5773 112.388 30.9601 112.187 30.1684 112.187  c
29.3872 112.187 l
29.3872 111.796 l
29.8090 111.796 l
31.5799 111.796 32.4653 111.083 32.4653 109.656  c
32.4653 108.385 31.9080 107.750 30.7934 107.750  c
30.3038 107.750 29.8767 107.854 29.5122 108.062  c
29.3767 108.145 29.2830 108.484 29.2309 109.078  c
29.2309 109.171 l
28.6059 109.171 l
28.6059 107.734 l
29.2830 107.484 30.0486 107.359 30.9028 107.359  c
31.7674 107.359 32.4523 107.554 32.9575 107.945  c
33.4627 108.335 33.7153 108.864 33.7153 109.531  c
33.7153 110.645 33.0590 111.442 31.7465 111.921  c
32.5486 112.130 33.1241 112.427 33.4731 112.812  c
33.8221 113.197 33.9965 113.734 33.9965 114.421  c
33.9965 115.286 33.7153 115.971 33.1528 116.476  c
32.5903 116.981 31.8247 117.234 30.8559 117.234  c
29.9705 117.234 29.1945 117.135 28.5278 116.937  c
h
37.3745 112.187 m
37.9682 111.375 38.7234 110.968 39.6401 110.968  c
40.4630 110.968 41.1349 111.242 41.6557 111.789  c
42.1766 112.335 42.4370 113.046 42.4370 113.921  c
42.4370 114.859 42.1401 115.645 41.5463 116.281  c
40.9526 116.916 40.2234 117.234 39.3588 117.234  c
38.2963 117.234 37.4786 116.820 36.9057 115.992  c
36.3328 115.164 36.0463 113.984 36.0463 112.453  c
36.0463 110.838 36.3771 109.585 37.0385 108.695  c
37.7000 107.804 38.6349 107.359 39.8432 107.359  c
40.6245 107.359 41.3120 107.500 41.9057 107.781  c
41.9057 109.281 l
41.2807 109.281 l
41.2651 109.156 l
41.2338 108.703 l
41.2130 108.421 41.0620 108.192 40.7807 108.015  c
40.4995 107.838 40.1453 107.750 39.7182 107.750  c
38.9786 107.750 38.4031 108.138 37.9917 108.914  c
37.5802 109.690 37.3745 110.781 37.3745 112.187  c
h
37.4213 113.531 m
37.4213 114.500 37.6167 115.291 38.0073 115.906  c
38.3979 116.520 38.9005 116.828 39.5151 116.828  c
40.6193 116.828 41.1713 115.916 41.1713 114.093  c
41.1713 112.302 40.5984 111.406 39.4526 111.406  c
38.8276 111.406 38.3328 111.599 37.9682 111.984  c
37.6036 112.369 37.4213 112.885 37.4213 113.531  c
h
44.6586 117.015 m
44.6586 115.437 l
45.2836 115.437 l
45.2993 115.578 l
45.3149 116.062 l
45.3357 116.583 45.7420 116.843 46.5336 116.843  c
47.1170 116.843 47.5805 116.614 47.9243 116.156  c
48.2680 115.697 48.4399 115.078 48.4399 114.296  c
48.4399 113.401 48.1743 112.760 47.6430 112.375  c
47.1118 111.989 46.2420 111.796 45.0336 111.796  c
44.8149 111.796 l
44.8149 107.609 l
49.5493 107.609 l
49.5493 108.703 l
45.2055 108.703 l
45.2055 111.328 l
45.7836 111.328 l
48.4295 111.328 49.7524 112.333 49.7524 114.343  c
49.7524 115.250 49.4477 115.958 48.8383 116.468  c
48.2290 116.979 47.3878 117.234 46.3149 117.234  c
45.7836 117.234 45.2316 117.161 44.6586 117.015  c
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
55.0000 34.3288 m
49.8000 34.3288 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
19.9062 45.2343 m
18.9375 45.2343 18.1562 44.7838 17.5625 43.8828  c
16.9687 42.9817 16.6718 41.7968 16.6718 40.3281  c
16.6718 38.8177 16.9687 37.6145 17.5625 36.7187  c
18.1562 35.8229 18.9531 35.3750 19.9531 35.3750  c
20.9531 35.3750 21.7526 35.8229 22.3515 36.7187  c
22.9505 37.6145 23.2500 38.8125 23.2500 40.3125  c
23.2500 41.8229 22.9505 43.0208 22.3515 43.9062  c
21.7526 44.7916 20.9375 45.2343 19.9062 45.2343  c
h
19.9218 44.8437 m
21.2552 44.9062 21.9218 43.3697 21.9218 40.2343  c
21.9218 37.2447 21.2656 35.7500 19.9531 35.7500  c
18.6510 35.7500 18.0000 37.2656 18.0000 40.2968  c
18.0000 43.2656 18.6406 44.7812 19.9218 44.8437  c
h
24.8466 45.0000 m
24.8466 43.4375 l
26.4091 43.4375 l
26.4091 45.0000 l
24.8466 45.0000 l
h
28.5278 44.9375 m
28.5278 43.2812 l
29.1528 43.2812 l
29.1684 43.4218 l
29.1840 43.8593 l
29.1840 44.1302 29.3429 44.3619 29.6606 44.5546  c
29.9783 44.7474 30.3715 44.8437 30.8403 44.8437  c
31.3924 44.8437 31.8377 44.6250 32.1762 44.1875  c
32.5148 43.7500 32.6840 43.1718 32.6840 42.4531  c
32.6840 41.7447 32.4627 41.1901 32.0200 40.7890  c
31.5773 40.3880 30.9601 40.1875 30.1684 40.1875  c
29.3872 40.1875 l
29.3872 39.7968 l
29.8090 39.7968 l
31.5799 39.7968 32.4653 39.0833 32.4653 37.6562  c
32.4653 36.3854 31.9080 35.7500 30.7934 35.7500  c
30.3038 35.7500 29.8767 35.8541 29.5122 36.0625  c
29.3767 36.1458 29.2830 36.4843 29.2309 37.0781  c
29.2309 37.1718 l
28.6059 37.1718 l
28.6059 35.7343 l
29.2830 35.4843 30.0486 35.3593 30.9028 35.3593  c
31.7674 35.3593 32.4523 35.5546 32.9575 35.9453  c
33.4627 36.3359 33.7153 36.8645 33.7153 37.5312  c
33.7153 38.6458 33.0590 39.4427 31.7465 39.9218  c
32.5486 40.1302 33.1241 40.4270 33.4731 40.8125  c
33.8221 41.1979 33.9965 41.7343 33.9965 42.4218  c
33.9965 43.2864 33.7153 43.9713 33.1528 44.4765  c
32.5903 44.9817 31.8247 45.2343 30.8559 45.2343  c
29.9705 45.2343 29.1945 45.1354 28.5278 44.9375  c
h
37.0463 45.0000 m
37.2338 43.9791 37.5359 43.0911 37.9526 42.3359  c
38.3693 41.5807 39.3588 40.1510 40.9213 38.0468  c
41.8745 36.7812 l
36.5776 36.7812 l
36.5776 35.6093 l
42.6088 35.6093 l
42.6088 36.4218 l
40.0359 39.8802 38.6766 42.7395 38.5307 45.0000  c
37.0463 45.0000 l
h
47.0805 45.2343 m
46.1118 45.2343 45.3305 44.7838 44.7368 43.8828  c
44.1430 42.9817 43.8461 41.7968 43.8461 40.3281  c
43.8461 38.8177 44.1430 37.6145 44.7368 36.7187  c
45.3305 35.8229 46.1274 35.3750 47.1274 35.3750  c
48.1274 35.3750 48.9269 35.8229 49.5258 36.7187  c
50.1248 37.6145 50.4243 38.8125 50.4243 40.3125  c
50.4243 41.8229 50.1248 43.0208 49.5258 43.9062  c
48.9269 44.7916 48.1118 45.2343 47.0805 45.2343  c
h
47.0961 44.8437 m
48.4295 44.9062 49.0961 43.3697 49.0961 40.2343  c
49.0961 37.2447 48.4399 35.7500 47.1274 35.7500  c
45.8253 35.7500 45.1743 37.2656 45.1743 40.2968  c
45.1743 43.2656 45.8149 44.7812 47.0961 44.8437  c
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
